// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBMMO_Backend;

#nullable disable

namespace TBMMO_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TBMMO_Backend.Models.Clothing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterName")
                        .IsUnique();

                    b.ToTable("Clothing");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId")
                        .IsUnique();

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.PlayerCharacter", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("PlayerCharacter");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.ProfessionSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId")
                        .IsUnique();

                    b.ToTable("ProfessionSheets");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.RelationshipSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId")
                        .IsUnique();

                    b.ToTable("RelationshipSheets");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.SkillSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId")
                        .IsUnique();

                    b.ToTable("SkillSheets");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.StatSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlayerCharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId")
                        .IsUnique();

                    b.ToTable("StatSheets");
                });

            modelBuilder.Entity("TBMMO_Backend.Models.Clothing", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Clothing")
                        .HasForeignKey("TBMMO_Backend.Models.Clothing", "PlayerCharacterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.Inventory", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Inventory")
                        .HasForeignKey("TBMMO_Backend.Models.Inventory", "PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.ProfessionSheet", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Professions")
                        .HasForeignKey("TBMMO_Backend.Models.ProfessionSheet", "PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.RelationshipSheet", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Relationships")
                        .HasForeignKey("TBMMO_Backend.Models.RelationshipSheet", "PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.SkillSheet", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Skills")
                        .HasForeignKey("TBMMO_Backend.Models.SkillSheet", "PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.StatSheet", b =>
                {
                    b.HasOne("TBMMO_Backend.Models.PlayerCharacter", null)
                        .WithOne("Stats")
                        .HasForeignKey("TBMMO_Backend.Models.StatSheet", "PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TBMMO_Backend.Models.PlayerCharacter", b =>
                {
                    b.Navigation("Clothing")
                        .IsRequired();

                    b.Navigation("Inventory")
                        .IsRequired();

                    b.Navigation("Professions")
                        .IsRequired();

                    b.Navigation("Relationships")
                        .IsRequired();

                    b.Navigation("Skills")
                        .IsRequired();

                    b.Navigation("Stats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
